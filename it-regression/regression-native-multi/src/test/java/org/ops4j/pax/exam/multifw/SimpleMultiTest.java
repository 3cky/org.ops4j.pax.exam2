package org.ops4j.pax.exam.multifw;import org.junit.Test;import org.ops4j.pax.exam.Option;import org.ops4j.pax.exam.TestAddress;import org.ops4j.pax.exam.TestContainer;import org.ops4j.pax.exam.TestContainerFactory;import org.ops4j.pax.exam.TestProbeProvider;import org.ops4j.pax.exam.spi.container.PaxExamRuntime;import org.ops4j.pax.exam.spi.container.PlumbingContext;import static org.ops4j.pax.exam.LibraryOptions.*;/** * */public class SimpleMultiTest {    @Test    public void bareRunTest()        throws Exception    {        TestContainerFactory factory = PaxExamRuntime.getTestContainerFactory();        PlumbingContext ctx = new PlumbingContext();        Option[] options = new Option[]{ junitBundles(), easyMockBundles() };        // the parse will split all single containers        for( TestContainer testContainer : factory.parse( options ) ) {            try {                testContainer.start();                TestProbeProvider probe = ctx.createProbe().addTest( Probe.class ).build();                testContainer.install( probe.getStream() );                for( TestAddress call : probe.getTests() ) {                    // this is a shortcut for getting the proper Service (ServiceInvoker currently) and calls the "invoke" with that call (handle)                    ctx.execute( testContainer, call );                }            } finally {                testContainer.stop();            }        }    }}